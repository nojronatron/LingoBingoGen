// <auto-generated />
using System;
using LingoBingoLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LingoBingoLibrary.Migrations
{
    [DbContext(typeof(LingoWordsContext))]
    [Migration("20210614211256_AdjustedDbTableColumnConstraints")]
    partial class AdjustedDbTableColumnConstraints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LingoBingoLibrary.DataAccess.LingoCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("LingoCategories");
                });

            modelBuilder.Entity("LingoBingoLibrary.DataAccess.LingoWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LingoCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LingoCategoryId");

                    b.ToTable("LingoWords");
                });

            modelBuilder.Entity("LingoBingoLibrary.DataAccess.LingoWord", b =>
                {
                    b.HasOne("LingoBingoLibrary.DataAccess.LingoCategory", "LingoCategory")
                        .WithMany("LingoWords")
                        .HasForeignKey("LingoCategoryId");

                    b.Navigation("LingoCategory");
                });

            modelBuilder.Entity("LingoBingoLibrary.DataAccess.LingoCategory", b =>
                {
                    b.Navigation("LingoWords");
                });
#pragma warning restore 612, 618
        }
    }
}
